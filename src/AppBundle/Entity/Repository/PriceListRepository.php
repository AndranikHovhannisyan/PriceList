<?php

namespace AppBundle\Entity\Repository;

/**
 * PriceListRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PriceListRepository extends \Doctrine\ORM\EntityRepository
{
    public function findWithRelations($id)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT pl, plp, p, c
                           FROM AppBundle:PriceList pl
                           INDEX BY pl.id
                           JOIN pl.priceListProducts plp
                           JOIN plp.product p
                           LEFT JOIN pl.company c
                           WHERE pl.id = :id")
            ->setParameter('id', $id)
            ->getOneOrNullResult();
    }

    public function findQueryByUser($user)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT pl, plp, p, c
                           FROM AppBundle:PriceList pl
                           INDEX BY pl.id
                           JOIN pl.priceListProducts plp
                           JOIN plp.product p
                           LEFT JOIN pl.company c
                           WHERE pl.user = :user OR :user IS NULL
                           ORDER BY pl.performDate DESC")
            ->setParameter('user', $user);
    }

    public function findPriceListsTotal($priceListIds)
    {
        if (count($priceListIds) == 0){
            return [];
        }

        return $this->getEntityManager()
            ->createQuery("SELECT pl.id, SUM(p.price * plp.quantity) as total
                           FROM AppBundle:PriceList pl
                           INDEX BY pl.id
                           JOIN pl.priceListProducts plp
                           JOIN plp.product p
                           WHERE pl.id IN (:ids)
                           GROUP BY pl.id")
            ->setParameter('ids', $priceListIds)
            ->getResult();
    }

    public function findStatistic($companyId, $startDate, $endDate)
    {
        $startDate = $startDate ? $startDate : null;
        $endDate = $endDate ? $endDate : null;

        return $this->getEntityManager()
            ->createQuery("SELECT  p.id, p.name, p.price, COALESCE(SUM(plp.quantity * (pl.id / pl.id)), 0) as quantity
                           FROM AppBundle:Product p
                           LEFT JOIN AppBundle:PriceListProduct plp WITH plp.product = p
                           LEFT JOIN plp.priceList pl WITH pl.company = :company
                                      AND (pl.performDate >= :startDate OR :startDate IS NULL)
                                      AND (pl.performDate <= :endDate OR :endDate IS NULL)
                           GROUP BY p.name
                           ORDER BY p.id")
            ->setParameter('company', $companyId)
            ->setParameter('startDate', $startDate)
            ->setParameter('endDate', $endDate)
            ->getResult();
    }
}
